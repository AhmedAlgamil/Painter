/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mycoustompainter;

import mycoustompainter.myshapes.MyCustomShapes;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.geom.GeneralPath;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import mycoustompainter.myshapes.LineShapes;
import mycoustompainter.myshapes.OvalShape;
import mycoustompainter.myshapes.RectangleShape;
import tools.PencilTool;

/**
 *
 * @author gemy
 */
public class MyCustomPaint extends javax.swing.JFrame {

    private ArrayList<MyCustomShapes> shapes;
    private int firstX;
    private int firstY;
    private int secondX;
    private int secondY;
    private int lastId;

    MyCustomShapes myCustomShapes;
    private Color myColor;

    /**
     * Creates new form MyCustomPaint
     */
    public MyCustomPaint() {
        initComponents();
        shapes = new ArrayList<>();
        btnBlackColor.setSelected(true);
        btnDrawLine.setSelected(true);
        myColor = Color.BLACK;
        ImageIcon myImage = new ImageIcon("D:\\projects\\java projects\\MyCoustomPainter\\src\\mycoustompainter\\assets\\painter.png");
        this.setIconImage(myImage.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnDrawLine = new javax.swing.JButton();
        btnDrawRectangle = new javax.swing.JButton();
        btnDrawOval = new javax.swing.JButton();
        btnDrawPencil = new javax.swing.JButton();
        btnEraser = new javax.swing.JButton();
        chbSolid = new javax.swing.JCheckBox();
        chbDotted = new javax.swing.JCheckBox();
        btnBlueColor = new javax.swing.JButton();
        btnYellowColor = new javax.swing.JButton();
        btnGreenColor = new javax.swing.JButton();
        btnRedColor = new javax.swing.JButton();
        btnBlackColor = new javax.swing.JButton();
        sliderSize = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("painter");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Functions:");

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("PaintMode:");

        btnDrawLine.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDrawLine.setText("Line");
        btnDrawLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawLineActionPerformed(evt);
            }
        });

        btnDrawRectangle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDrawRectangle.setText("Rectangle");
        btnDrawRectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawRectangleActionPerformed(evt);
            }
        });

        btnDrawOval.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDrawOval.setText("Oval");
        btnDrawOval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawOvalActionPerformed(evt);
            }
        });

        btnDrawPencil.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDrawPencil.setText("Pencil");
        btnDrawPencil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawPencilActionPerformed(evt);
            }
        });

        btnEraser.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEraser.setText("Eraser");
        btnEraser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEraserActionPerformed(evt);
            }
        });

        chbSolid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chbSolid.setText("Sloid");
        chbSolid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbSolidActionPerformed(evt);
            }
        });

        chbDotted.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chbDotted.setText("Dotted");
        chbDotted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbDottedActionPerformed(evt);
            }
        });

        btnBlueColor.setBackground(new java.awt.Color(51, 51, 255));
        btnBlueColor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBlueColor.setForeground(new java.awt.Color(255, 255, 255));
        btnBlueColor.setText("Blue");
        btnBlueColor.setToolTipText("");
        btnBlueColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBlueColorActionPerformed(evt);
            }
        });

        btnYellowColor.setBackground(new java.awt.Color(255, 255, 51));
        btnYellowColor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnYellowColor.setForeground(new java.awt.Color(255, 255, 255));
        btnYellowColor.setText("yellow");
        btnYellowColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYellowColorActionPerformed(evt);
            }
        });

        btnGreenColor.setBackground(new java.awt.Color(0, 153, 51));
        btnGreenColor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnGreenColor.setForeground(new java.awt.Color(255, 255, 255));
        btnGreenColor.setText("green");
        btnGreenColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGreenColorActionPerformed(evt);
            }
        });

        btnRedColor.setBackground(new java.awt.Color(255, 0, 0));
        btnRedColor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRedColor.setForeground(new java.awt.Color(255, 255, 255));
        btnRedColor.setText("Red");
        btnRedColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedColorActionPerformed(evt);
            }
        });

        btnBlackColor.setBackground(new java.awt.Color(0, 0, 0));
        btnBlackColor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBlackColor.setForeground(new java.awt.Color(255, 255, 255));
        btnBlackColor.setText("Black");
        btnBlackColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBlackColorActionPerformed(evt);
            }
        });

        sliderSize.setMaximum(30);
        sliderSize.setMinimum(1);
        sliderSize.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sliderSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDrawLine)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDrawRectangle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDrawOval)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDrawPencil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEraser)
                        .addGap(18, 18, 18)
                        .addComponent(chbSolid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chbDotted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBlackColor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRedColor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGreenColor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnYellowColor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBlueColor, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnClear)
                    .addComponent(btnDrawLine)
                    .addComponent(btnDrawRectangle)
                    .addComponent(btnDrawOval)
                    .addComponent(btnDrawPencil)
                    .addComponent(btnEraser)
                    .addComponent(jLabel2)
                    .addComponent(chbSolid)
                    .addComponent(chbDotted)
                    .addComponent(btnBlackColor)
                    .addComponent(btnRedColor)
                    .addComponent(btnGreenColor)
                    .addComponent(btnYellowColor)
                    .addComponent(btnBlueColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(757, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDrawOvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawOvalActionPerformed
        // TODO add your handling code here:
        setEnabledShapesButton(true, false, false, false, false);
    }//GEN-LAST:event_btnDrawOvalActionPerformed

    private void btnDrawPencilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawPencilActionPerformed
        // TODO add your handling code here:
        setEnabledShapesButton(false, true, false, false, false);
    }//GEN-LAST:event_btnDrawPencilActionPerformed

    private void chbDottedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbDottedActionPerformed
        // TODO add your handling code here:
        chbSolid.setSelected(false);
        chbDotted.setSelected(true);
    }//GEN-LAST:event_chbDottedActionPerformed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        if (btnDrawPencil.isSelected() == true || btnEraser.isSelected() == true) {
            firstX = evt.getX();
            firstY = evt.getY();
        }
        secondX = evt.getX();
        secondY = evt.getY();
        repaint();
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        firstX = evt.getX();
        firstY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here:
        lastId++;
        if (btnDrawLine.isSelected()) {
            myCustomShapes = new LineShapes("Line " + shapes.size());

        } else if (btnDrawOval.isSelected()) {
            myCustomShapes = new OvalShape(chbSolid.isSelected() ? "Oval Fill " + shapes.size() : "Oval " + shapes.size());
        } else if (btnDrawRectangle.isSelected()) {
            myCustomShapes = new RectangleShape(chbSolid.isSelected() ? "Rectangle Fill " + shapes.size() : "Rectangle " + shapes.size());
        } else if (btnEraser.isSelected()) {
            myCustomShapes = new MyCustomShapes("Eraser");
        }
        myCustomShapes.setShapeId(lastId);

        myCustomShapes.setX1(firstX);
        myCustomShapes.setY1(firstY);
        myCustomShapes.setX2(evt.getX());
        myCustomShapes.setY2(evt.getY());
        myCustomShapes.setShapeColor(myColor);

        shapes.add(myCustomShapes);

        repaint();
    }//GEN-LAST:event_jPanel1MouseReleased

    private void btnDrawLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawLineActionPerformed
        // TODO add your handling code here:
        setEnabledShapesButton(false, false, true, false, false);
    }//GEN-LAST:event_btnDrawLineActionPerformed

    private void btnDrawRectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawRectangleActionPerformed
        // TODO add your handling code here:
        setEnabledShapesButton(false, false, false, true, false);
    }//GEN-LAST:event_btnDrawRectangleActionPerformed

    private void btnEraserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEraserActionPerformed
        // TODO add your handling code here:
        setEnabledShapesButton(false, false, false, false, true);
    }//GEN-LAST:event_btnEraserActionPerformed

    private void btnBlackColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBlackColorActionPerformed
        // TODO add your handling code here:
        setEnabledColorButton(true, false, false, false, false);
        myColor = Color.BLACK;
    }//GEN-LAST:event_btnBlackColorActionPerformed

    private void btnRedColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedColorActionPerformed
        // TODO add your handling code here:
        setEnabledColorButton(false, true, false, false, false);
        myColor = Color.RED;
    }//GEN-LAST:event_btnRedColorActionPerformed

    private void btnGreenColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGreenColorActionPerformed
        // TODO add your handling code here:
        setEnabledColorButton(false, false, true, false, false);
        myColor = Color.GREEN;
    }//GEN-LAST:event_btnGreenColorActionPerformed

    private void btnYellowColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYellowColorActionPerformed
        // TODO add your handling code here:
        setEnabledColorButton(false, false, false, false, true);
        myColor = Color.YELLOW;
    }//GEN-LAST:event_btnYellowColorActionPerformed

    private void btnBlueColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBlueColorActionPerformed
        // TODO add your handling code here:
        setEnabledColorButton(false, false, false, true, false);
        myColor = Color.BLUE;
    }//GEN-LAST:event_btnBlueColorActionPerformed

    private void chbSolidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbSolidActionPerformed
        // TODO add your handling code here:
        chbSolid.setSelected(true);
        chbDotted.setSelected(false);
    }//GEN-LAST:event_chbSolidActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:

        myCustomShapes = new MyCustomShapes();
        shapes.clear();
        lastId = 0;
        btnClear.setSelected(true);
        firstX = 0;
        firstY = 0;
        secondX = 0;
        secondY = 0;
        repaint();
    }//GEN-LAST:event_btnClearActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged

    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed

    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseReleased

    @Override
    public void paint(Graphics grphcs) {
        super.paint(grphcs); //To change body of generated methods, choose Tools | Templates.
//        if (btnClear.isSelected()) {
//            grphcs.setColor(Color.white);
//            grphcs.fillRect(150, 150, this.getWidth(), this.getHeight());
//            btnClear.setSelected(false);
//        }
        makePaint(grphcs);
        for (MyCustomShapes shape : shapes) {
            paintAllShapes(grphcs, shape);
        }
    }

    public void paintAllShapes(Graphics grphcs, MyCustomShapes mcs) {
        grphcs.setColor(mcs.getShapeColor());
        if (mcs.getName().contains("Oval")) {
            if (mcs.getName().contains("Fill")) {
                grphcs.fillOval(mcs.getX1(), mcs.getY1(), mcs.getX2() - mcs.getX1(), mcs.getY2() - mcs.getY1());
            }
            grphcs.drawOval(mcs.getX1(), mcs.getY1(), mcs.getX2() - mcs.getX1(), mcs.getY2() - mcs.getY1());
        } else if (mcs.getName().contains("Line")) {
            grphcs.drawLine(mcs.getX1(), mcs.getY1(), mcs.getX2(), mcs.getY2());
        } else if (mcs.getName().contains("Pencil")) {
            grphcs.fillOval(mcs.getX1(), mcs.getY1(), mcs.getX2() - mcs.getX1(), mcs.getY2() - mcs.getY1());
        } else if (mcs.getName().contains("Eraser")) {
            grphcs.fillOval(mcs.getX1(), mcs.getY1(), mcs.getX2() - mcs.getX1(), mcs.getY2() - mcs.getY1());
        } else if (mcs.getName().contains("Rectangle")) {
            if (mcs.getName().contains("Fill")) {
                grphcs.fillRect(mcs.getX1(), mcs.getY1(), mcs.getX2() - mcs.getX1(), mcs.getY2() - mcs.getY1());
            }
            grphcs.drawRect(mcs.getX1(), mcs.getY1(), mcs.getX2() - mcs.getX1(), mcs.getY2() - mcs.getY1());
        }
    }

    public void setEnabledShapesButton(boolean drawOval, boolean drawPencil, boolean drawLine, boolean drawRectangle, boolean eraser) {
        btnDrawOval.setSelected(drawOval);
        btnDrawPencil.setSelected(drawPencil);
        btnDrawLine.setSelected(drawLine);
        btnDrawRectangle.setSelected(drawRectangle);
        btnEraser.setSelected(eraser);
    }

    public void setEnabledColorButton(boolean blackColor, boolean redColor, boolean greenColor, boolean blueColor, boolean yellowColor) {
        btnBlackColor.setSelected(blackColor);
        btnRedColor.setSelected(redColor);
        btnGreenColor.setSelected(greenColor);
        btnBlueColor.setSelected(blueColor);
        btnYellowColor.setSelected(yellowColor);
    }

    public void makePaint(Graphics grphcs) {
        if (btnDrawOval.isSelected()) {
            if (chbSolid.isSelected()) {
                grphcs.fillOval(firstX, firstY, secondX - firstX, secondY - firstY);
            }
            grphcs.drawOval(firstX, firstY, secondX - firstX, secondY - firstY);
        } else if (btnDrawLine.isSelected()) {
            grphcs.drawLine(firstX, firstY, secondX, secondY);
        } else if (btnDrawRectangle.isSelected()) {
            if (chbSolid.isSelected()) {
                grphcs.fillRect(firstX, firstY, secondX - firstX, secondY - firstY);
            }
            grphcs.drawRect(firstX, firstY, secondX - firstX, secondY - firstY);
        } else if (btnDrawLine.isSelected()) {
            grphcs.drawLine(myCustomShapes.getX1(), myCustomShapes.getY1(), myCustomShapes.getX2(), myCustomShapes.getY2());
        } else if (btnEraser.isSelected()) {
            
             myCustomShapes = new MyCustomShapes("Eraser", firstX, firstY, secondX + sliderSize.getValue(), secondY + sliderSize.getValue(), lastId);
            grphcs.fillOval(firstX, firstY, secondX - firstX, secondY - firstY);
            myCustomShapes.setShapeColor(Color.white);
            shapes.add(myCustomShapes);// to be Handled in event handling
        } else if (btnDrawPencil.isSelected()) {
             myCustomShapes = new MyCustomShapes("Pencil", firstX, firstY, secondX + sliderSize.getValue(), secondY + sliderSize.getValue(), lastId);
            myCustomShapes.setShapeColor(myColor);
            grphcs.fillOval(firstX, firstY, secondX - firstX, secondY - firstY);
            shapes.add(myCustomShapes);// to be Handled in event handling
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyCustomPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyCustomPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyCustomPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyCustomPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyCustomPaint().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBlackColor;
    private javax.swing.JButton btnBlueColor;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDrawLine;
    private javax.swing.JButton btnDrawOval;
    private javax.swing.JButton btnDrawPencil;
    private javax.swing.JButton btnDrawRectangle;
    private javax.swing.JButton btnEraser;
    private javax.swing.JButton btnGreenColor;
    private javax.swing.JButton btnRedColor;
    private javax.swing.JButton btnYellowColor;
    private javax.swing.JCheckBox chbDotted;
    private javax.swing.JCheckBox chbSolid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider sliderSize;
    // End of variables declaration//GEN-END:variables
}
